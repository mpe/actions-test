# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:

env:
  ARCH: powerpc

jobs:
  kernel:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        defconfig: [ppc64, corenet64_smp, pmac32, ppc40x, ppc44x, mpc885_ads, corenet32_smp]
        image: [ubuntu-20.04, fedora-32, korg-4.9.4]
        subarch: [ppc64]
        include:
          - subarch: ppc64le
            defconfig: ppc64le
            image: ubuntu-20.04
          - subarch: ppc64le
            defconfig: ppc64le
            image: korg-5.5.0
          - subarch: ppc64le
            defconfig: ppc64le
            image: fedora-32

    env:
      TARGET: kernel
      SUBARCH: ${{ matrix.subarch }}
      IMAGE: ${{ matrix.image }}
      DEFCONFIG: ${{ matrix.defconfig }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'linux'

    - name: build
      run: ./linux/arch/powerpc/tools/ci-build.sh

  selftests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: [ubuntu-20.04]
        subarch: [ppc64, ppc64le]

    env:
      TARGET: selftests
      SUBARCH: ${{ matrix.subarch }}
      IMAGE: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'linux'

    - name: build
      run: ./linux/arch/powerpc/tools/ci-build.sh

  ppctests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image: [ubuntu-20.04, ubuntu-18.04, ubuntu-16.04]
        subarch: [ppc64, ppc64le]

    env:
      TARGET: ppctests
      SUBARCH: ${{ matrix.subarch }}
      IMAGE: ${{ matrix.image }}

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'linux'

    - name: build
      run: ./linux/arch/powerpc/tools/ci-build.sh
